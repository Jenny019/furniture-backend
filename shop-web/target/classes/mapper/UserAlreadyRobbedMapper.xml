<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.mapper.UserAlreadyRobbedMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.UserAlreadyRobbed" >
    <id column="panicBuyingID" property="panicBuyingID" jdbcType="INTEGER" />
    <result column="userID" property="userID" jdbcType="VARCHAR" />
    <result column="relationID" property="relationID" jdbcType="INTEGER" />
    <result column="relationType" property="relationType" jdbcType="SMALLINT" />
    <result column="createdTimestamp" property="createdTimestamp" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    panicBuyingID, userID, relationID, relationType, createdTimestamp
  </sql>
  <sql id="whereSql">
    WHERE 1 = 1
    <if test="userID != null">
      AND userID = #{userID}
    </if>
    <if test="relationID != null">
      AND relationID = #{relationID}
    </if>
    <if test="relationType != null">
      AND relationType = #{relationType}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.UserAlreadyRobbedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ylfs_user_already_robbed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ylfs_user_already_robbed
    where panicBuyingID = #{panicBuyingID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ylfs_user_already_robbed
    where panicBuyingID = #{panicBuyingID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.UserAlreadyRobbedExample" >
    delete from ylfs_user_already_robbed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.UserAlreadyRobbed" >
    insert into ylfs_user_already_robbed (panicBuyingID, userID, relationID, 
      relationType, createdTimestamp)
    values (#{panicBuyingID,jdbcType=INTEGER}, #{userID,jdbcType=VARCHAR}, #{relationID,jdbcType=INTEGER}, 
      #{relationType,jdbcType=SMALLINT}, #{createdTimestamp,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.UserAlreadyRobbed" >
    insert into ylfs_user_already_robbed
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="panicBuyingID != null" >
        panicBuyingID,
      </if>
      <if test="userID != null" >
        userID,
      </if>
      <if test="relationID != null" >
        relationID,
      </if>
      <if test="relationType != null" >
        relationType,
      </if>
      <if test="createdTimestamp != null" >
        createdTimestamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="panicBuyingID != null" >
        #{panicBuyingID,jdbcType=INTEGER},
      </if>
      <if test="userID != null" >
        #{userID,jdbcType=VARCHAR},
      </if>
      <if test="relationID != null" >
        #{relationID,jdbcType=INTEGER},
      </if>
      <if test="relationType != null" >
        #{relationType,jdbcType=SMALLINT},
      </if>
      <if test="createdTimestamp != null" >
        #{createdTimestamp,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.UserAlreadyRobbedExample" resultType="java.lang.Integer" >
    select count(*) from ylfs_user_already_robbed
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ylfs_user_already_robbed
    <set >
      <if test="record.panicBuyingID != null" >
        panicBuyingID = #{record.panicBuyingID,jdbcType=INTEGER},
      </if>
      <if test="record.userID != null" >
        userID = #{record.userID,jdbcType=VARCHAR},
      </if>
      <if test="record.relationID != null" >
        relationID = #{record.relationID,jdbcType=INTEGER},
      </if>
      <if test="record.relationType != null" >
        relationType = #{record.relationType,jdbcType=SMALLINT},
      </if>
      <if test="record.createdTimestamp != null" >
        createdTimestamp = #{record.createdTimestamp,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ylfs_user_already_robbed
    set panicBuyingID = #{record.panicBuyingID,jdbcType=INTEGER},
      userID = #{record.userID,jdbcType=VARCHAR},
      relationID = #{record.relationID,jdbcType=INTEGER},
      relationType = #{record.relationType,jdbcType=SMALLINT},
      createdTimestamp = #{record.createdTimestamp,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.UserAlreadyRobbed" >
    update ylfs_user_already_robbed
    <set >
      <if test="userID != null" >
        userID = #{userID,jdbcType=VARCHAR},
      </if>
      <if test="relationID != null" >
        relationID = #{relationID,jdbcType=INTEGER},
      </if>
      <if test="relationType != null" >
        relationType = #{relationType,jdbcType=SMALLINT},
      </if>
      <if test="createdTimestamp != null" >
        createdTimestamp = #{createdTimestamp,jdbcType=BIGINT},
      </if>
    </set>
    where panicBuyingID = #{panicBuyingID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.UserAlreadyRobbed" >
    update ylfs_user_already_robbed
    set userID = #{userID,jdbcType=VARCHAR},
      relationID = #{relationID,jdbcType=INTEGER},
      relationType = #{relationType,jdbcType=SMALLINT},
      createdTimestamp = #{createdTimestamp,jdbcType=BIGINT}
    where panicBuyingID = #{panicBuyingID,jdbcType=INTEGER}
  </update>
  <select id="selectList" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.UserAlreadyRobbed">
    select
    <include refid="Base_Column_List" />
    from ylfs_user_already_robbed
    <include refid="whereSql"></include>
  </select>
</mapper>