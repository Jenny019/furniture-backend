<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.ProductStyleMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.ProductStyle">
    <id column="styleID" jdbcType="INTEGER" property="styleID" />
    <result column="styleName" jdbcType="VARCHAR" property="styleName" />
    <result column="styleImgApp" jdbcType="VARCHAR" property="styleImgApp" />
    <result column="styleImgWeb" jdbcType="VARCHAR" property="styleImgWeb" />
    <result column="state" jdbcType="SMALLINT" property="state" />
    <result column="itemNum" jdbcType="INTEGER" property="itemNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    styleID, styleName, styleImgApp, styleImgWeb, state, itemNum
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.entity.ProductStyleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ylfs_product_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylfs_product_style
    where styleID = #{styleID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ylfs_product_style
    where styleID = #{styleID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.ProductStyleExample">
    delete from ylfs_product_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.ProductStyle">
    insert into ylfs_product_style (styleID, styleName, styleImgApp, 
      styleImgWeb, state, itemNum
      )
    values (#{styleID,jdbcType=INTEGER}, #{styleName,jdbcType=VARCHAR}, #{styleImgApp,jdbcType=VARCHAR}, 
      #{styleImgWeb,jdbcType=VARCHAR}, #{state,jdbcType=SMALLINT}, #{itemNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.ProductStyle">
    insert into ylfs_product_style
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="styleID != null">
        styleID,
      </if>
      <if test="styleName != null">
        styleName,
      </if>
      <if test="styleImgApp != null">
        styleImgApp,
      </if>
      <if test="styleImgWeb != null">
        styleImgWeb,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="itemNum != null">
        itemNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="styleID != null">
        #{styleID,jdbcType=INTEGER},
      </if>
      <if test="styleName != null">
        #{styleName,jdbcType=VARCHAR},
      </if>
      <if test="styleImgApp != null">
        #{styleImgApp,jdbcType=VARCHAR},
      </if>
      <if test="styleImgWeb != null">
        #{styleImgWeb,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="itemNum != null">
        #{itemNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.ProductStyleExample" resultType="java.lang.Integer">
    select count(*) from ylfs_product_style
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ylfs_product_style
    <set>
      <if test="record.styleID != null">
        styleID = #{record.styleID,jdbcType=INTEGER},
      </if>
      <if test="record.styleName != null">
        styleName = #{record.styleName,jdbcType=VARCHAR},
      </if>
      <if test="record.styleImgApp != null">
        styleImgApp = #{record.styleImgApp,jdbcType=VARCHAR},
      </if>
      <if test="record.styleImgWeb != null">
        styleImgWeb = #{record.styleImgWeb,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=SMALLINT},
      </if>
      <if test="record.itemNum != null">
        itemNum = #{record.itemNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ylfs_product_style
    set styleID = #{record.styleID,jdbcType=INTEGER},
      styleName = #{record.styleName,jdbcType=VARCHAR},
      styleImgApp = #{record.styleImgApp,jdbcType=VARCHAR},
      styleImgWeb = #{record.styleImgWeb,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=SMALLINT},
      itemNum = #{record.itemNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.ProductStyle">
    update ylfs_product_style
    <set>
      <if test="styleName != null">
        styleName = #{styleName,jdbcType=VARCHAR},
      </if>
      <if test="styleImgApp != null">
        styleImgApp = #{styleImgApp,jdbcType=VARCHAR},
      </if>
      <if test="styleImgWeb != null">
        styleImgWeb = #{styleImgWeb,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=SMALLINT},
      </if>
      <if test="itemNum != null">
        itemNum = #{itemNum,jdbcType=INTEGER},
      </if>
    </set>
    where styleID = #{styleID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.ProductStyle">
    update ylfs_product_style
    set styleName = #{styleName,jdbcType=VARCHAR},
      styleImgApp = #{styleImgApp,jdbcType=VARCHAR},
      styleImgWeb = #{styleImgWeb,jdbcType=VARCHAR},
      state = #{state,jdbcType=SMALLINT},
      itemNum = #{itemNum,jdbcType=INTEGER}
    where styleID = #{styleID,jdbcType=INTEGER}
  </update>
</mapper>