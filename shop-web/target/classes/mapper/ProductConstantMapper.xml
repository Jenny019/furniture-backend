<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.ProductConstantMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.ProductConstant">
    <id column="constantCode" jdbcType="SMALLINT" property="constantCode" />
    <id column="constantID" jdbcType="SMALLINT" property="constantID" />
    <result column="constantFieldName" jdbcType="VARCHAR" property="constantFieldName" />
    <result column="constantName" jdbcType="VARCHAR" property="constantName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    constantCode, constantID, constantFieldName, constantName
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.entity.ProductConstantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ylfs_product_constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.example.springboot.entity.ProductConstantKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylfs_product_constant
    where constantCode = #{constantCode,jdbcType=SMALLINT}
      and constantID = #{constantID,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.springboot.entity.ProductConstantKey">
    delete from ylfs_product_constant
    where constantCode = #{constantCode,jdbcType=SMALLINT}
      and constantID = #{constantID,jdbcType=SMALLINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.ProductConstantExample">
    delete from ylfs_product_constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.ProductConstant">
    insert into ylfs_product_constant (constantCode, constantID, constantFieldName, 
      constantName)
    values (#{constantCode,jdbcType=SMALLINT}, #{constantID,jdbcType=SMALLINT}, #{constantFieldName,jdbcType=VARCHAR}, 
      #{constantName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.ProductConstant">
    insert into ylfs_product_constant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="constantCode != null">
        constantCode,
      </if>
      <if test="constantID != null">
        constantID,
      </if>
      <if test="constantFieldName != null">
        constantFieldName,
      </if>
      <if test="constantName != null">
        constantName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="constantCode != null">
        #{constantCode,jdbcType=SMALLINT},
      </if>
      <if test="constantID != null">
        #{constantID,jdbcType=SMALLINT},
      </if>
      <if test="constantFieldName != null">
        #{constantFieldName,jdbcType=VARCHAR},
      </if>
      <if test="constantName != null">
        #{constantName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.ProductConstantExample" resultType="java.lang.Integer">
    select count(*) from ylfs_product_constant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ylfs_product_constant
    <set>
      <if test="record.constantCode != null">
        constantCode = #{record.constantCode,jdbcType=SMALLINT},
      </if>
      <if test="record.constantID != null">
        constantID = #{record.constantID,jdbcType=SMALLINT},
      </if>
      <if test="record.constantFieldName != null">
        constantFieldName = #{record.constantFieldName,jdbcType=VARCHAR},
      </if>
      <if test="record.constantName != null">
        constantName = #{record.constantName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ylfs_product_constant
    set constantCode = #{record.constantCode,jdbcType=SMALLINT},
      constantID = #{record.constantID,jdbcType=SMALLINT},
      constantFieldName = #{record.constantFieldName,jdbcType=VARCHAR},
      constantName = #{record.constantName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.ProductConstant">
    update ylfs_product_constant
    <set>
      <if test="constantFieldName != null">
        constantFieldName = #{constantFieldName,jdbcType=VARCHAR},
      </if>
      <if test="constantName != null">
        constantName = #{constantName,jdbcType=VARCHAR},
      </if>
    </set>
    where constantCode = #{constantCode,jdbcType=SMALLINT}
      and constantID = #{constantID,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.ProductConstant">
    update ylfs_product_constant
    set constantFieldName = #{constantFieldName,jdbcType=VARCHAR},
      constantName = #{constantName,jdbcType=VARCHAR}
    where constantCode = #{constantCode,jdbcType=SMALLINT}
      and constantID = #{constantID,jdbcType=SMALLINT}
  </update>
</mapper>