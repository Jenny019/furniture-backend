<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.UserMadeToOrderMapper">
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.UserMadeToOrder">
    <id column="orderID" jdbcType="INTEGER" property="orderID" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phoneNumber" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="provinceID" jdbcType="INTEGER" property="provinceID" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="cityID" jdbcType="INTEGER" property="cityID" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="countryID" jdbcType="INTEGER" property="countryID" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="userRemark" jdbcType="VARCHAR" property="userRemark" />
    <result column="createdTime" jdbcType="BIGINT" property="createdTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orderID, name, phoneNumber, provinceID, province, cityID, city, countryID, country, 
    address, userRemark, createdTime
  </sql>
  <select id="selectByExample" parameterType="com.example.springboot.entity.UserMadeToOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ylfs_user_made_to_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ylfs_user_made_to_order
    where orderID = #{orderID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ylfs_user_made_to_order
    where orderID = #{orderID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.UserMadeToOrderExample">
    delete from ylfs_user_made_to_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.UserMadeToOrder">
    insert into ylfs_user_made_to_order (orderID, name, phoneNumber, 
      provinceID, province, cityID, 
      city, countryID, country, 
      address, userRemark, createdTime
      )
    values (#{orderID,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{provinceID,jdbcType=INTEGER}, #{province,jdbcType=VARCHAR}, #{cityID,jdbcType=INTEGER}, 
      #{city,jdbcType=VARCHAR}, #{countryID,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{userRemark,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.springboot.entity.UserMadeToOrder">
    insert into ylfs_user_made_to_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderID != null">
        orderID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phoneNumber != null">
        phoneNumber,
      </if>
      <if test="provinceID != null">
        provinceID,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="cityID != null">
        cityID,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="countryID != null">
        countryID,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userRemark != null">
        userRemark,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderID != null">
        #{orderID,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="provinceID != null">
        #{provinceID,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="cityID != null">
        #{cityID,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="countryID != null">
        #{countryID,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userRemark != null">
        #{userRemark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.UserMadeToOrderExample" resultType="java.lang.Integer">
    select count(*) from ylfs_user_made_to_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ylfs_user_made_to_order
    <set>
      <if test="record.orderID != null">
        orderID = #{record.orderID,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phoneNumber = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceID != null">
        provinceID = #{record.provinceID,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.cityID != null">
        cityID = #{record.cityID,jdbcType=INTEGER},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.countryID != null">
        countryID = #{record.countryID,jdbcType=INTEGER},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.userRemark != null">
        userRemark = #{record.userRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        createdTime = #{record.createdTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ylfs_user_made_to_order
    set orderID = #{record.orderID,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phoneNumber = #{record.phoneNumber,jdbcType=VARCHAR},
      provinceID = #{record.provinceID,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      cityID = #{record.cityID,jdbcType=INTEGER},
      city = #{record.city,jdbcType=VARCHAR},
      countryID = #{record.countryID,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      userRemark = #{record.userRemark,jdbcType=VARCHAR},
      createdTime = #{record.createdTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.UserMadeToOrder">
    update ylfs_user_made_to_order
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="provinceID != null">
        provinceID = #{provinceID,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="cityID != null">
        cityID = #{cityID,jdbcType=INTEGER},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="countryID != null">
        countryID = #{countryID,jdbcType=INTEGER},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userRemark != null">
        userRemark = #{userRemark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=BIGINT},
      </if>
    </set>
    where orderID = #{orderID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.UserMadeToOrder">
    update ylfs_user_made_to_order
    set name = #{name,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      provinceID = #{provinceID,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      cityID = #{cityID,jdbcType=INTEGER},
      city = #{city,jdbcType=VARCHAR},
      countryID = #{countryID,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      userRemark = #{userRemark,jdbcType=VARCHAR},
      createdTime = #{createdTime,jdbcType=BIGINT}
    where orderID = #{orderID,jdbcType=INTEGER}
  </update>
</mapper>