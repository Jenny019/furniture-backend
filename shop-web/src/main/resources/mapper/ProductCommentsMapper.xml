<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springboot.mapper.ProductCommentsMapper" >
  <resultMap id="BaseResultMap" type="com.example.springboot.entity.ProductComments" >
    <id column="evaluateID" property="evaluateID" jdbcType="INTEGER" />
    <result column="productID" property="productID" jdbcType="INTEGER" />
    <result column="userID" property="userID" jdbcType="VARCHAR" />
    <result column="phoneNumber" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="descriptionMatchScore" property="descriptionMatchScore" jdbcType="INTEGER" />
    <result column="logisticsServiceScore" property="logisticsServiceScore" jdbcType="INTEGER" />
    <result column="serviceAttitudeScore" property="serviceAttitudeScore" jdbcType="INTEGER" />
    <result column="standardID" property="standardID" jdbcType="INTEGER" />
    <result column="colourID" property="colourID" jdbcType="INTEGER" />
    <result column="colourName" property="colourName" jdbcType="VARCHAR" />
    <result column="standard" property="standard" jdbcType="VARCHAR" />
    <result column="styleName" property="styleName" jdbcType="VARCHAR" />
    <result column="orderID" property="orderID" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="SMALLINT" />
    <result column="createdTimestamp" property="createdTimestamp" jdbcType="BIGINT" />
    <result column="lastModifiedTimeStamp" property="lastModifiedTimeStamp" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="DTOBaseResultMap" type="com.example.springboot.dto.ProductCommentsDTO" >
    <id column="evaluateID" property="evaluateID" jdbcType="INTEGER" />
    <result column="productID" property="productID" jdbcType="INTEGER" />
    <result column="userID" property="userID" jdbcType="VARCHAR" />
    <result column="phoneNumber" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="descriptionMatchScore" property="descriptionMatchScore" jdbcType="INTEGER" />
    <result column="logisticsServiceScore" property="logisticsServiceScore" jdbcType="INTEGER" />
    <result column="serviceAttitudeScore" property="serviceAttitudeScore" jdbcType="INTEGER" />
    <result column="standardID" property="standardID" jdbcType="INTEGER" />
    <result column="colourID" property="colourID" jdbcType="INTEGER" />
    <result column="colourName" property="colourName" jdbcType="VARCHAR" />
    <result column="standard" property="standard" jdbcType="VARCHAR" />
    <result column="styleName" property="styleName" jdbcType="VARCHAR" />
    <result column="orderID" property="orderID" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="SMALLINT" />
    <result column="createdTimestamp" property="createdTimestamp" jdbcType="BIGINT" />
    <result column="lastModifiedTimeStamp" property="lastModifiedTimeStamp" jdbcType="BIGINT" />
    <collection property="commonImages" ofType="com.example.springboot.entity.CommonImage" column="{relationID=evaluateID}" select="com.example.springboot.mapper.CommonImageMapper.selectProductCommentsImgByRelationID" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    evaluateID, productID, userID, phoneNumber, content, descriptionMatchScore, logisticsServiceScore, 
    serviceAttitudeScore, standardID, colourID, colourName, standard, styleName, orderID, 
    state, createdTimestamp, lastModifiedTimeStamp
  </sql>
  <sql id="selectListSql">
    SELECT
    p.*
    FROM ylfs_product_comment p
  </sql>
  <sql id="whereSql">
    WHERE 1 = 1
    <if test="productID != null">
      AND productID = #{productID}
    </if>
    <if test="userID != null">
      AND userID = #{userID}
    </if>
    <if test="phoneNumber != null">
      AND phoneNumber = #{phoneNumber}
    </if>
    <if test="standardID != null">
      AND standardID = #{standardID}
    </if>
    <if test="colourID != null">
      AND colourID = #{colourID}
    </if>
    <if test="styleName != null">
      AND styleName = #{styleName}
    </if>
    <if test="orderID != null">
      AND orderID = #{orderID}
    </if>
    AND state = 1
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.springboot.entity.ProductCommentsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ylfs_product_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ylfs_product_comment
    where evaluateID = #{evaluateID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ylfs_product_comment
    where evaluateID = #{evaluateID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.springboot.entity.ProductCommentsExample" >
    delete from ylfs_product_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.springboot.entity.ProductComments" >
    insert into ylfs_product_comment (evaluateID, productID, userID, 
      phoneNumber, content, descriptionMatchScore, 
      logisticsServiceScore, serviceAttitudeScore, 
      standardID, colourID, colourName, 
      standard, styleName, orderID, 
      state, createdTimestamp, lastModifiedTimeStamp
      )
    values (#{evaluateID,jdbcType=INTEGER}, #{productID,jdbcType=INTEGER}, #{userID,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{descriptionMatchScore,jdbcType=INTEGER},
      #{logisticsServiceScore,jdbcType=INTEGER}, #{serviceAttitudeScore,jdbcType=INTEGER},
      #{standardID,jdbcType=INTEGER}, #{colourID,jdbcType=INTEGER}, #{colourName,jdbcType=VARCHAR}, 
      #{standard,jdbcType=VARCHAR}, #{styleName,jdbcType=VARCHAR}, #{orderID,jdbcType=INTEGER}, 
      #{state,jdbcType=SMALLINT}, #{createdTimestamp,jdbcType=BIGINT}, #{lastModifiedTimeStamp,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="evaluateID" parameterType="com.example.springboot.entity.ProductComments" >
    insert into ylfs_product_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="evaluateID != null" >
        evaluateID,
      </if>
      <if test="productID != null" >
        productID,
      </if>
      <if test="userID != null" >
        userID,
      </if>
      <if test="phoneNumber != null" >
        phoneNumber,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="descriptionMatchScore != null" >
        descriptionMatchScore,
      </if>
      <if test="logisticsServiceScore != null" >
        logisticsServiceScore,
      </if>
      <if test="serviceAttitudeScore != null" >
        serviceAttitudeScore,
      </if>
      <if test="standardID != null" >
        standardID,
      </if>
      <if test="colourID != null" >
        colourID,
      </if>
      <if test="colourName != null" >
        colourName,
      </if>
      <if test="standard != null" >
        standard,
      </if>
      <if test="styleName != null" >
        styleName,
      </if>
      <if test="orderID != null" >
        orderID,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createdTimestamp != null" >
        createdTimestamp,
      </if>
      <if test="lastModifiedTimeStamp != null" >
        lastModifiedTimeStamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="evaluateID != null" >
        #{evaluateID,jdbcType=INTEGER},
      </if>
      <if test="productID != null" >
        #{productID,jdbcType=INTEGER},
      </if>
      <if test="userID != null" >
        #{userID,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="descriptionMatchScore != null" >
        #{descriptionMatchScore,jdbcType=INTEGER},
      </if>
      <if test="logisticsServiceScore != null" >
        #{logisticsServiceScore,jdbcType=INTEGER},
      </if>
      <if test="serviceAttitudeScore != null" >
        #{serviceAttitudeScore,jdbcType=INTEGER},
      </if>
      <if test="standardID != null" >
        #{standardID,jdbcType=INTEGER},
      </if>
      <if test="colourID != null" >
        #{colourID,jdbcType=INTEGER},
      </if>
      <if test="colourName != null" >
        #{colourName,jdbcType=VARCHAR},
      </if>
      <if test="standard != null" >
        #{standard,jdbcType=VARCHAR},
      </if>
      <if test="styleName != null" >
        #{styleName,jdbcType=VARCHAR},
      </if>
      <if test="orderID != null" >
        #{orderID,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
      <if test="createdTimestamp != null" >
        #{createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedTimeStamp != null" >
        #{lastModifiedTimeStamp,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.springboot.entity.ProductCommentsExample" resultType="java.lang.Integer" >
    select count(*) from ylfs_product_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ylfs_product_comment
    <set >
      <if test="record.evaluateID != null" >
        evaluateID = #{record.evaluateID,jdbcType=INTEGER},
      </if>
      <if test="record.productID != null" >
        productID = #{record.productID,jdbcType=INTEGER},
      </if>
      <if test="record.userID != null" >
        userID = #{record.userID,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null" >
        phoneNumber = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.descriptionMatchScore != null" >
        descriptionMatchScore = #{record.descriptionMatchScore,jdbcType=INTEGER},
      </if>
      <if test="record.logisticsServiceScore != null" >
        logisticsServiceScore = #{record.logisticsServiceScore,jdbcType=INTEGER},
      </if>
      <if test="record.serviceAttitudeScore != null" >
        serviceAttitudeScore = #{record.serviceAttitudeScore,jdbcType=INTEGER},
      </if>
      <if test="record.standardID != null" >
        standardID = #{record.standardID,jdbcType=INTEGER},
      </if>
      <if test="record.colourID != null" >
        colourID = #{record.colourID,jdbcType=INTEGER},
      </if>
      <if test="record.colourName != null" >
        colourName = #{record.colourName,jdbcType=VARCHAR},
      </if>
      <if test="record.standard != null" >
        standard = #{record.standard,jdbcType=VARCHAR},
      </if>
      <if test="record.styleName != null" >
        styleName = #{record.styleName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderID != null" >
        orderID = #{record.orderID,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=SMALLINT},
      </if>
      <if test="record.createdTimestamp != null" >
        createdTimestamp = #{record.createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="record.lastModifiedTimeStamp != null" >
        lastModifiedTimeStamp = #{record.lastModifiedTimeStamp,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ylfs_product_comment
    set evaluateID = #{record.evaluateID,jdbcType=INTEGER},
      productID = #{record.productID,jdbcType=INTEGER},
      userID = #{record.userID,jdbcType=VARCHAR},
      phoneNumber = #{record.phoneNumber,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      descriptionMatchScore = #{record.descriptionMatchScore,jdbcType=INTEGER},
      logisticsServiceScore = #{record.logisticsServiceScore,jdbcType=INTEGER},
      serviceAttitudeScore = #{record.serviceAttitudeScore,jdbcType=INTEGER},
      standardID = #{record.standardID,jdbcType=INTEGER},
      colourID = #{record.colourID,jdbcType=INTEGER},
      colourName = #{record.colourName,jdbcType=VARCHAR},
      standard = #{record.standard,jdbcType=VARCHAR},
      styleName = #{record.styleName,jdbcType=VARCHAR},
      orderID = #{record.orderID,jdbcType=INTEGER},
      state = #{record.state,jdbcType=SMALLINT},
      createdTimestamp = #{record.createdTimestamp,jdbcType=BIGINT},
      lastModifiedTimeStamp = #{record.lastModifiedTimeStamp,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.springboot.entity.ProductComments" >
    update ylfs_product_comment
    <set >
      <if test="productID != null" >
        productID = #{productID,jdbcType=INTEGER},
      </if>
      <if test="userID != null" >
        userID = #{userID,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null" >
        phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="descriptionMatchScore != null" >
        descriptionMatchScore = #{descriptionMatchScore,jdbcType=INTEGER},
      </if>
      <if test="logisticsServiceScore != null" >
        logisticsServiceScore = #{logisticsServiceScore,jdbcType=INTEGER},
      </if>
      <if test="serviceAttitudeScore != null" >
        serviceAttitudeScore = #{serviceAttitudeScore,jdbcType=INTEGER},
      </if>
      <if test="standardID != null" >
        standardID = #{standardID,jdbcType=INTEGER},
      </if>
      <if test="colourID != null" >
        colourID = #{colourID,jdbcType=INTEGER},
      </if>
      <if test="colourName != null" >
        colourName = #{colourName,jdbcType=VARCHAR},
      </if>
      <if test="standard != null" >
        standard = #{standard,jdbcType=VARCHAR},
      </if>
      <if test="styleName != null" >
        styleName = #{styleName,jdbcType=VARCHAR},
      </if>
      <if test="orderID != null" >
        orderID = #{orderID,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=SMALLINT},
      </if>
      <if test="createdTimestamp != null" >
        createdTimestamp = #{createdTimestamp,jdbcType=BIGINT},
      </if>
      <if test="lastModifiedTimeStamp != null" >
        lastModifiedTimeStamp = #{lastModifiedTimeStamp,jdbcType=BIGINT},
      </if>
    </set>
    where evaluateID = #{evaluateID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.springboot.entity.ProductComments" >
    update ylfs_product_comment
    set productID = #{productID,jdbcType=INTEGER},
      userID = #{userID,jdbcType=VARCHAR},
      phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      descriptionMatchScore = #{descriptionMatchScore,jdbcType=INTEGER},
      logisticsServiceScore = #{logisticsServiceScore,jdbcType=INTEGER},
      serviceAttitudeScore = #{serviceAttitudeScore,jdbcType=INTEGER},
      standardID = #{standardID,jdbcType=INTEGER},
      colourID = #{colourID,jdbcType=INTEGER},
      colourName = #{colourName,jdbcType=VARCHAR},
      standard = #{standard,jdbcType=VARCHAR},
      styleName = #{styleName,jdbcType=VARCHAR},
      orderID = #{orderID,jdbcType=INTEGER},
      state = #{state,jdbcType=SMALLINT},
      createdTimestamp = #{createdTimestamp,jdbcType=BIGINT},
      lastModifiedTimeStamp = #{lastModifiedTimeStamp,jdbcType=BIGINT}
    where evaluateID = #{evaluateID,jdbcType=INTEGER}
  </update>
  <select id="productCommentsList" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    from ylfs_product_comment
    <include refid="whereSql"></include>
  </select>
  <select id="productCommentsListByPage" resultMap="DTOBaseResultMap">
    SELECT * FROM (<include refid="selectListSql"></include>) p
    <include refid="whereSql"></include>
  </select>
</mapper>